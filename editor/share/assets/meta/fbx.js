const e=require("fire-path"),t=require("fire-fs"),r=Editor.require("unpack://node_modules/fbx2gltf"),s=require("./gltf"),i=require("./buffer");module.exports=class extends s{constructor(e){super(e),this._convertDestPath=""}static defaultType(){return"fbx"}async importModel(s){let i=e.join(Editor.Project.path,"temp","gltf",e.relative(Editor.Project.path,s));return i=e.join(e.dirname(i),e.basenameNoExt(i)+".gltf"),t.ensureDirSync(e.dirname(i)),new Promise((e,o)=>{r(s,i).then(r=>{console.log(`Successed converting ${s} to ${i}`);let n={meshes:[]};try{let e=t.readFileSync(r,"utf8");n=JSON.parse(e)}catch(e){return Editor.error(e),o(e)}this._convertDestPath=r,this._gltf=n,e()})})}_createBufferMeta(t,r,s){this._bufferUuids=[];for(let o=0;o<t.buffers.length;o++){let n,u=t.buffers[o].uri;n=r[u]?r[u]:new i(this._assetdb);let f=e.join(e.dirname(this._convertDestPath),u);n.import(f,()=>{}),this._bufferUuids.push(n.uuid),s[u]=n}}};