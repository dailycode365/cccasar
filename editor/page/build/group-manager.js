"use strict";var e=require("async"),t=require("lodash");const{promisify:s}=require("util");var i=Editor.require("app://editor/share/engine-extends/json-packer"),r=Editor.require("app://editor/share/engine-extends/texture-asset-packer"),n=require("./hash-uuid"),a=4,l=!0;module.exports=class{constructor(e,t,s,i,r){this.writer=e,this.strategy=s,this.assetdb=i,this.minify=!t,s.init(this),this.inlineSpriteFrames=!!r.inlineSpriteFrames,this.mergeStartScene=!!r.mergeStartScene,this.packers=[],this.rootUuids=null,this.packableGroupRootUuids=null,this.buildAssets=null,this.startSceneUuid=""}_isPackable(e){var t=e.type;if(!t)return!1;var s=Editor.assets[t];return!(!s||cc.RawAsset.isRawAssetType(s))}_queryPackableByUuid(e,t){this.assetdb.queryInfoByUuid(e).then(s=>s?s.type?(t(null,this._isPackable(s)),void 0):t(new Error("Asset type not specified "+s.url)):t(new Error("Can not get asset info of "+e)),t)}_queryPackableDepends(e,s){var i=Editor.Utils.getDependsRecursively(this.buildAssets,e,"dependUuids");if(!Array.isArray(i)||0===i.length)return s(null,null);var r=t([e]).concat(i).uniq().value();Editor.Utils.filterAsync(r,this._queryPackableByUuid.bind(this),s)}_groupInRoot(e){var t=[];Promise.all(this.rootUuids.map(async e=>{var i=await this.assetdb.queryInfoByUuid(e);if(!i)throw new Error("Can not get asset info of "+e);if(!i.type)throw new Error("Asset type not specified "+i.url);if(this.strategy.shouldPack(i)){this.packableGroupRootUuids.push(e);var r=await s(this._queryPackableDepends.bind(this))(e);r&&r.length>1&&t.push(r)}})).then(()=>{e(null,t)},s=>{e(s,t)})}removeFromGroups(e,t){let s=cc.js.array.fastRemove;for(let i=0;i<e.length;i++){let r=e[i].uuids;for(let e=0;e<t.length;e++)s(r,t[e]);0===r.length&&(cc.js.array.fastRemoveAt(e,i),--i)}}_mergeStartScene(e,t){console.time("init packs: merge start scene"),this._queryPackableDepends(this.startSceneUuid,(s,i)=>{if(s)return t(s);i&&(this.removeFromGroups(e,i),e.push({name:"",uuids:i})),console.timeEnd("init packs: merge start scene"),t(null,e)})}getAllUuidsInBuild(){return t(this.buildAssets).values().filter(e=>"object"==typeof e&&e.dependUuids).map(e=>e.dependUuids).push(this.rootUuids).flatten().uniq().value()}async queryAssetInfosInBuild(e,s){var i=t.findKey(Editor.assets,t=>t===e);if(!i)return Editor.error("can not find asset type for "+cc.js.getClassName(e)),s([]);var r=this.getAllUuidsInBuild(),n=[];await Promise.all(r.map(async e=>{var t=await this.assetdb.queryInfoByUuid(e);t&&t.type===i&&n.push(t)})),s(null,n)}_inlineToDependsGroup(e,t){let s=[];for(let i=0;i<t.length;i++){let r=t[i],n=0;for(let t in this.buildAssets){let s=this.buildAssets[t];if("object"!=typeof s)continue;let i=s.dependUuids;if(i&&-1!==i.indexOf(r)){let s=!1;for(let i=0;i<e.length;i++){let a=e[i].uuids;-1!==a.indexOf(t)&&(-1===a.indexOf(r)&&(a.push(r),++n),s=!0)}s||(e.push({name:"",uuids:[t,r]}),++n)}}n>0&&(console.log(`inline SpriteFrame: ${r}, inline count: ${n}`),s.push(r))}return s}_inlineSpriteFrames(e,t){console.time("init packs: inline single SpriteFrames"),this.queryAssetInfosInBuild(cc.SpriteFrame,(s,i)=>{var r=i.map(e=>e.uuid);if(l)this.removeFromGroups(e,r);else{let t=new Set;for(let s=0;s<e.length;s++){let i=e[s].uuids;if(i.length>1)for(let e=0;e<i.length;e++)t.add(i[e])}r=r.filter(e=>!t.has(e))}let n=this._inlineToDependsGroup(e,r);for(let t=0;t<n.length;t++){let s=n[t];-1!==this.packableGroupRootUuids.indexOf(s)&&(e.push({name:"",uuids:[s],isPlaceholder:!0}),console.log(`add dummy group to allow download ${s} individually`))}console.timeEnd("init packs: inline single SpriteFrames"),t(null,e)})}_packAllTextures(e,t){console.time("init packs: pack all textures"),this.queryAssetInfosInBuild(cc.Texture2D,(s,i)=>{var r=i.map(e=>e.uuid);this.removeFromGroups(e,r),e.push({name:"",uuids:r,type:"texture"}),console.timeEnd("init packs: pack all textures"),t(null,e)})}_mergeSmallFiles(t,s){var i=[e=>e(null,t)];this.inlineSpriteFrames&&i.push(this._inlineSpriteFrames.bind(this)),i.push(this._packAllTextures.bind(this)),this.mergeStartScene&&i.push(this._mergeStartScene.bind(this)),e.waterfall(i,s)}_computeGroup(t){e.waterfall([this._groupInRoot.bind(this),this.strategy.transformGroups.bind(this.strategy),this.strategy.mergeSmallFiles.bind(this.strategy),this._mergeSmallFiles.bind(this),(e,t)=>{t(null,e.filter(e=>e.isPlaceholder||e.uuids.length>1))}],t)}_packAssets(t,s,i){e.each(s,(e,s)=>{this.writer.readJsonByUuid(e,(i,r)=>{if(i)return s(i);t.add(e,r),s()})},i)}initPacks(t,s,n,l){this.rootUuids=t,this.packableGroupRootUuids=[],this.buildAssets=s,this.startSceneUuid=n,this._computeGroup((t,s)=>{if(t)return l(t);e.eachLimit(s,a,(e,t)=>{var s=e.uuids,n="texture"===e.type?new r:new i;this._packAssets(n,s,s=>{if(s)return t(s);n.name=e.name,this.packers.push(n),t()})},l)})}buildPacks(t){var s=this.packers.map(e=>e.pack(this.minify)),i=s.map(e=>e.indices),r=n.calculate(i,n.BuiltinHashType.PackedAssets),l={};e.eachLimit(Object.keys(s),a,(e,t)=>{var i=s[e],n=r[e];l[n]=i.indices,this.writer.deleteJsonsByUuid(i.indices,e=>{if(e)return t(e);this.writer.writeJsonByUuidNoCache(n,i.data,t)})},e=>{e?t(e):t(null,{packedAssets:l})})}};