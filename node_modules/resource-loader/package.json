{
  "_args": [
    [
      {
        "raw": "resource-loader@^1.6.4",
        "scope": null,
        "escapedName": "resource-loader",
        "name": "resource-loader",
        "rawSpec": "^1.6.4",
        "spec": ">=1.6.4 <2.0.0",
        "type": "range"
      },
      "/Users/nantas/fireball-x/fireball_2.1-release/dist/CocosCreator.app/Contents/Resources/app/node_modules/pixi.js"
    ]
  ],
  "_cnpm_publish_time": 1475037753334,
  "_from": "resource-loader@^1.6.4",
  "_hasShrinkwrap": false,
  "_id": "resource-loader@1.8.0",
  "_location": "/resource-loader",
  "_nodeVersion": "6.4.0",
  "_npmOperationalInternal": {
    "host": "packages-12-west.internal.npmjs.com",
    "tmp": "tmp/resource-loader-1.8.0.tgz_1475037753106_0.8038796114269644"
  },
  "_npmUser": {
    "name": "englercj",
    "email": "englercj@live.com"
  },
  "_npmVersion": "3.10.7",
  "_phantomChildren": {},
  "_requested": {
    "raw": "resource-loader@^1.6.4",
    "scope": null,
    "escapedName": "resource-loader",
    "name": "resource-loader",
    "rawSpec": "^1.6.4",
    "spec": ">=1.6.4 <2.0.0",
    "type": "range"
  },
  "_requiredBy": [
    "/pixi.js"
  ],
  "_resolved": "http://registry.npm.taobao.org/resource-loader/download/resource-loader-1.8.0.tgz",
  "_shasum": "7ac61d6947ee99678d60b970ed1467af995fb3dd",
  "_shrinkwrap": null,
  "_spec": "resource-loader@^1.6.4",
  "_where": "/Users/nantas/fireball-x/fireball_2.1-release/dist/CocosCreator.app/Contents/Resources/app/node_modules/pixi.js",
  "author": {
    "name": "Chad Engler",
    "email": "chad@pantherdev.com"
  },
  "bugs": {
    "url": "https://github.com/englercj/asset-loader/issues"
  },
  "dependencies": {
    "eventemitter3": "^2.0.0",
    "parse-uri": "^1.0.0"
  },
  "description": "A generic asset loader, made with web games in mind.",
  "devDependencies": {
    "@englercj/code-style": "^1.0.6",
    "browserify": "^13.1.0",
    "chai": "^3.5.0",
    "eslint": "^3.1.1",
    "ink-docstrap": "^1.2.1",
    "jsdoc": "^3.4.0",
    "sinon": "^1.17.5",
    "sinon-chai": "^2.8.0",
    "testem": "^1.10.2",
    "uglify-js": "^2.7.0",
    "watchify": "^3.7.0"
  },
  "directories": {},
  "dist": {
    "shasum": "7ac61d6947ee99678d60b970ed1467af995fb3dd",
    "size": 59216,
    "noattachment": false,
    "tarball": "http://registry.npm.taobao.org/resource-loader/download/resource-loader-1.8.0.tgz"
  },
  "files": [
    "dist",
    "src"
  ],
  "gitHead": "5bff372271a1ddbb084ea13b94ee7ebcb30d1864",
  "homepage": "https://github.com/englercj/asset-loader",
  "keywords": [],
  "license": "MIT",
  "main": "./src/index.js",
  "maintainers": [
    {
      "name": "englercj",
      "email": "englercj@live.com"
    }
  ],
  "name": "resource-loader",
  "optionalDependencies": {},
  "publish_time": 1475037753334,
  "readme": "# Resource Loader [![Build Status](https://travis-ci.org/englercj/resource-loader.svg?branch=master)](https://travis-ci.org/englercj/resource-loader)\n\nA generic resource loader, made with web games in mind.\n\n## Usage\n\n```js\n// ctor\nvar loader = new Loader();\n\nloader\n    // chainable `add` to enqueue a resource\n    .add(name, url, options)\n\n    // chainable `before` to add a middleware that runs for each resource, *before* loading a resource.\n    // this is useful to implement custom caching modules (using filesystem, indexeddb, memory, etc).\n    .before(cachingMiddleware);\n\n    // chainable `after` to add a middleware that runs for each resource, *after* loading a resource.\n    // this is useful to implement custom parsing modules (like spritesheet parsers, spine parser, etc).\n    .after(parsingMiddleware);\n\n\n    // `load` method loads the queue of resources, and calls the passed in callback called once all\n    // resources have loaded.\n    .load(function (loader, resources) {\n        // resources is an object where the key is the name of the resource loaded and the value is the resource object.\n        // They have a couple default properties:\n        // - `url`: The URL that the resource was loaded from\n        // - `error`: The error that happened when trying to load (if any)\n        // - `data`: The raw data that was loaded\n        // also may contain other properties based on the middleware that runs.\n    });\n\n// throughout the process multiple events can happen.\nloader.on('progress', ...); // called once per loaded/errored file\nloader.on('error', ...); // called once per errored file\nloader.on('load', ...); // called once per loaded file\nloader.on('complete', ...); // called once when the queued resources all load.\n```\n\n## Building\n\nYou will need to have [node][node] and [gulp][gulp] setup on your machine.\n\nThen you can install dependencies and build:\n\n```js\nnpm i && npm run build\n```\n\nThat will output the built distributables to `./dist`.\n\n[node]:       http://nodejs.org/\n[gulp]:       http://gulpjs.com/\n\n## Supported Browsers\n\n- IE 9+\n- FF 13+\n- Chrome 20+\n- Safari 6+\n- Opera 12.1+\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/englercj/asset-loader.git"
  },
  "scripts": {
    "build": "npm run clean && browserify -d -s Loader -e ./src/index.js -o ./dist/resource-loader.js && npm run minify",
    "clean": "rm -rf ./dist && mkdir dist",
    "dev": "npm run clean && watchify -d -s Loader -e ./src/index.js -o ./dist/resource-loader.js",
    "docs": "jsdoc -c ./gulp/util/jsdoc.conf.json",
    "lint": "eslint src/ && eslint test/",
    "minify": "uglifyjs --output ./dist/resource-loader.min.js -- ./dist/resource-loader.js",
    "start": "npm run build",
    "test": "npm run build && testem ci",
    "travis": "npm run lint && npm test"
  },
  "version": "1.8.0"
}
